// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmap.proto

#ifndef PROTOBUF_osmap_2eproto__INCLUDED
#define PROTOBUF_osmap_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_osmap_2eproto();
void protobuf_AssignDesc_osmap_2eproto();
void protobuf_ShutdownFile_osmap_2eproto();

class SerializedDescriptor;
class SerializedFeature;
class SerializedK;
class SerializedKArray;
class SerializedKeyframe;
class SerializedKeyframeArray;
class SerializedKeyframeFeatures;
class SerializedKeyframeFeaturesArray;
class SerializedKeypoint;
class SerializedMappoint;
class SerializedMappointArray;
class SerializedPose;
class SerializedPosition;

// ===================================================================

class SerializedDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedDescriptor) */ {
 public:
  SerializedDescriptor();
  virtual ~SerializedDescriptor();

  SerializedDescriptor(const SerializedDescriptor& from);

  inline SerializedDescriptor& operator=(const SerializedDescriptor& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedDescriptor& default_instance();

  void Swap(SerializedDescriptor* other);

  // implements Message ----------------------------------------------

  inline SerializedDescriptor* New() const { return New(NULL); }

  SerializedDescriptor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedDescriptor& from);
  void MergeFrom(const SerializedDescriptor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 block = 1;
  int block_size() const;
  void clear_block();
  static const int kBlockFieldNumber = 1;
  ::google::protobuf::uint32 block(int index) const;
  void set_block(int index, ::google::protobuf::uint32 value);
  void add_block(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      block() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_block();

  // @@protoc_insertion_point(class_scope:SerializedDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > block_;
  mutable int _block_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedDescriptor* default_instance_;
};
// -------------------------------------------------------------------

class SerializedPose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedPose) */ {
 public:
  SerializedPose();
  virtual ~SerializedPose();

  SerializedPose(const SerializedPose& from);

  inline SerializedPose& operator=(const SerializedPose& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedPose& default_instance();

  void Swap(SerializedPose* other);

  // implements Message ----------------------------------------------

  inline SerializedPose* New() const { return New(NULL); }

  SerializedPose* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedPose& from);
  void MergeFrom(const SerializedPose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedPose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float element = 1;
  int element_size() const;
  void clear_element();
  static const int kElementFieldNumber = 1;
  float element(int index) const;
  void set_element(int index, float value);
  void add_element(float value);
  const ::google::protobuf::RepeatedField< float >&
      element() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_element();

  // @@protoc_insertion_point(class_scope:SerializedPose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< float > element_;
  mutable int _element_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedPose* default_instance_;
};
// -------------------------------------------------------------------

class SerializedPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedPosition) */ {
 public:
  SerializedPosition();
  virtual ~SerializedPosition();

  SerializedPosition(const SerializedPosition& from);

  inline SerializedPosition& operator=(const SerializedPosition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedPosition& default_instance();

  void Swap(SerializedPosition* other);

  // implements Message ----------------------------------------------

  inline SerializedPosition* New() const { return New(NULL); }

  SerializedPosition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedPosition& from);
  void MergeFrom(const SerializedPosition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:SerializedPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedPosition* default_instance_;
};
// -------------------------------------------------------------------

class SerializedKeypoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeypoint) */ {
 public:
  SerializedKeypoint();
  virtual ~SerializedKeypoint();

  SerializedKeypoint(const SerializedKeypoint& from);

  inline SerializedKeypoint& operator=(const SerializedKeypoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeypoint& default_instance();

  void Swap(SerializedKeypoint* other);

  // implements Message ----------------------------------------------

  inline SerializedKeypoint* New() const { return New(NULL); }

  SerializedKeypoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedKeypoint& from);
  void MergeFrom(const SerializedKeypoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedKeypoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float ptx = 1;
  void clear_ptx();
  static const int kPtxFieldNumber = 1;
  float ptx() const;
  void set_ptx(float value);

  // optional float pty = 2;
  void clear_pty();
  static const int kPtyFieldNumber = 2;
  float pty() const;
  void set_pty(float value);

  // optional float angle = 3;
  void clear_angle();
  static const int kAngleFieldNumber = 3;
  float angle() const;
  void set_angle(float value);

  // optional float octave = 4;
  void clear_octave();
  static const int kOctaveFieldNumber = 4;
  float octave() const;
  void set_octave(float value);

  // @@protoc_insertion_point(class_scope:SerializedKeypoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float ptx_;
  float pty_;
  float angle_;
  float octave_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedKeypoint* default_instance_;
};
// -------------------------------------------------------------------

class SerializedK : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedK) */ {
 public:
  SerializedK();
  virtual ~SerializedK();

  SerializedK(const SerializedK& from);

  inline SerializedK& operator=(const SerializedK& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedK& default_instance();

  void Swap(SerializedK* other);

  // implements Message ----------------------------------------------

  inline SerializedK* New() const { return New(NULL); }

  SerializedK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedK& from);
  void MergeFrom(const SerializedK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float fx = 1;
  void clear_fx();
  static const int kFxFieldNumber = 1;
  float fx() const;
  void set_fx(float value);

  // optional float fy = 2;
  void clear_fy();
  static const int kFyFieldNumber = 2;
  float fy() const;
  void set_fy(float value);

  // optional float cx = 3;
  void clear_cx();
  static const int kCxFieldNumber = 3;
  float cx() const;
  void set_cx(float value);

  // optional float cy = 4;
  void clear_cy();
  static const int kCyFieldNumber = 4;
  float cy() const;
  void set_cy(float value);

  // @@protoc_insertion_point(class_scope:SerializedK)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float fx_;
  float fy_;
  float cx_;
  float cy_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedK* default_instance_;
};
// -------------------------------------------------------------------

class SerializedKArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKArray) */ {
 public:
  SerializedKArray();
  virtual ~SerializedKArray();

  SerializedKArray(const SerializedKArray& from);

  inline SerializedKArray& operator=(const SerializedKArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKArray& default_instance();

  void Swap(SerializedKArray* other);

  // implements Message ----------------------------------------------

  inline SerializedKArray* New() const { return New(NULL); }

  SerializedKArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedKArray& from);
  void MergeFrom(const SerializedKArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedKArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedK k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::SerializedK& k(int index) const;
  ::SerializedK* mutable_k(int index);
  ::SerializedK* add_k();
  ::google::protobuf::RepeatedPtrField< ::SerializedK >*
      mutable_k();
  const ::google::protobuf::RepeatedPtrField< ::SerializedK >&
      k() const;

  // @@protoc_insertion_point(class_scope:SerializedKArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::SerializedK > k_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedKArray* default_instance_;
};
// -------------------------------------------------------------------

class SerializedMappoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedMappoint) */ {
 public:
  SerializedMappoint();
  virtual ~SerializedMappoint();

  SerializedMappoint(const SerializedMappoint& from);

  inline SerializedMappoint& operator=(const SerializedMappoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedMappoint& default_instance();

  void Swap(SerializedMappoint* other);

  // implements Message ----------------------------------------------

  inline SerializedMappoint* New() const { return New(NULL); }

  SerializedMappoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedMappoint& from);
  void MergeFrom(const SerializedMappoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedMappoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional .SerializedPosition position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::SerializedPosition& position() const;
  ::SerializedPosition* mutable_position();
  ::SerializedPosition* release_position();
  void set_allocated_position(::SerializedPosition* position);

  // optional float visible = 3;
  void clear_visible();
  static const int kVisibleFieldNumber = 3;
  float visible() const;
  void set_visible(float value);

  // optional float found = 4;
  void clear_found();
  static const int kFoundFieldNumber = 4;
  float found() const;
  void set_found(float value);

  // optional .SerializedDescriptor briefdescriptor = 5;
  bool has_briefdescriptor() const;
  void clear_briefdescriptor();
  static const int kBriefdescriptorFieldNumber = 5;
  const ::SerializedDescriptor& briefdescriptor() const;
  ::SerializedDescriptor* mutable_briefdescriptor();
  ::SerializedDescriptor* release_briefdescriptor();
  void set_allocated_briefdescriptor(::SerializedDescriptor* briefdescriptor);

  // @@protoc_insertion_point(class_scope:SerializedMappoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::SerializedPosition* position_;
  ::google::protobuf::uint32 id_;
  float visible_;
  ::SerializedDescriptor* briefdescriptor_;
  float found_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedMappoint* default_instance_;
};
// -------------------------------------------------------------------

class SerializedMappointArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedMappointArray) */ {
 public:
  SerializedMappointArray();
  virtual ~SerializedMappointArray();

  SerializedMappointArray(const SerializedMappointArray& from);

  inline SerializedMappointArray& operator=(const SerializedMappointArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedMappointArray& default_instance();

  void Swap(SerializedMappointArray* other);

  // implements Message ----------------------------------------------

  inline SerializedMappointArray* New() const { return New(NULL); }

  SerializedMappointArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedMappointArray& from);
  void MergeFrom(const SerializedMappointArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedMappointArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedMappoint mappoint = 1;
  int mappoint_size() const;
  void clear_mappoint();
  static const int kMappointFieldNumber = 1;
  const ::SerializedMappoint& mappoint(int index) const;
  ::SerializedMappoint* mutable_mappoint(int index);
  ::SerializedMappoint* add_mappoint();
  ::google::protobuf::RepeatedPtrField< ::SerializedMappoint >*
      mutable_mappoint();
  const ::google::protobuf::RepeatedPtrField< ::SerializedMappoint >&
      mappoint() const;

  // @@protoc_insertion_point(class_scope:SerializedMappointArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::SerializedMappoint > mappoint_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedMappointArray* default_instance_;
};
// -------------------------------------------------------------------

class SerializedKeyframe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeyframe) */ {
 public:
  SerializedKeyframe();
  virtual ~SerializedKeyframe();

  SerializedKeyframe(const SerializedKeyframe& from);

  inline SerializedKeyframe& operator=(const SerializedKeyframe& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeyframe& default_instance();

  void Swap(SerializedKeyframe* other);

  // implements Message ----------------------------------------------

  inline SerializedKeyframe* New() const { return New(NULL); }

  SerializedKeyframe* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedKeyframe& from);
  void MergeFrom(const SerializedKeyframe& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedKeyframe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional .SerializedPose pose = 2;
  bool has_pose() const;
  void clear_pose();
  static const int kPoseFieldNumber = 2;
  const ::SerializedPose& pose() const;
  ::SerializedPose* mutable_pose();
  ::SerializedPose* release_pose();
  void set_allocated_pose(::SerializedPose* pose);

  // optional .SerializedK kmatrix = 3;
  bool has_kmatrix() const;
  void clear_kmatrix();
  static const int kKmatrixFieldNumber = 3;
  const ::SerializedK& kmatrix() const;
  ::SerializedK* mutable_kmatrix();
  ::SerializedK* release_kmatrix();
  void set_allocated_kmatrix(::SerializedK* kmatrix);

  // optional uint32 kindex = 4;
  void clear_kindex();
  static const int kKindexFieldNumber = 4;
  ::google::protobuf::uint32 kindex() const;
  void set_kindex(::google::protobuf::uint32 value);

  // repeated uint32 loopedgesids = 5;
  int loopedgesids_size() const;
  void clear_loopedgesids();
  static const int kLoopedgesidsFieldNumber = 5;
  ::google::protobuf::uint32 loopedgesids(int index) const;
  void set_loopedgesids(int index, ::google::protobuf::uint32 value);
  void add_loopedgesids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      loopedgesids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_loopedgesids();

  // optional double timestamp = 6;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:SerializedKeyframe)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::SerializedPose* pose_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 kindex_;
  ::SerializedK* kmatrix_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > loopedgesids_;
  mutable int _loopedgesids_cached_byte_size_;
  double timestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedKeyframe* default_instance_;
};
// -------------------------------------------------------------------

class SerializedKeyframeArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeyframeArray) */ {
 public:
  SerializedKeyframeArray();
  virtual ~SerializedKeyframeArray();

  SerializedKeyframeArray(const SerializedKeyframeArray& from);

  inline SerializedKeyframeArray& operator=(const SerializedKeyframeArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeyframeArray& default_instance();

  void Swap(SerializedKeyframeArray* other);

  // implements Message ----------------------------------------------

  inline SerializedKeyframeArray* New() const { return New(NULL); }

  SerializedKeyframeArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedKeyframeArray& from);
  void MergeFrom(const SerializedKeyframeArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedKeyframeArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedKeyframe keyframe = 1;
  int keyframe_size() const;
  void clear_keyframe();
  static const int kKeyframeFieldNumber = 1;
  const ::SerializedKeyframe& keyframe(int index) const;
  ::SerializedKeyframe* mutable_keyframe(int index);
  ::SerializedKeyframe* add_keyframe();
  ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe >*
      mutable_keyframe();
  const ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe >&
      keyframe() const;

  // @@protoc_insertion_point(class_scope:SerializedKeyframeArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe > keyframe_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedKeyframeArray* default_instance_;
};
// -------------------------------------------------------------------

class SerializedFeature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedFeature) */ {
 public:
  SerializedFeature();
  virtual ~SerializedFeature();

  SerializedFeature(const SerializedFeature& from);

  inline SerializedFeature& operator=(const SerializedFeature& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedFeature& default_instance();

  void Swap(SerializedFeature* other);

  // implements Message ----------------------------------------------

  inline SerializedFeature* New() const { return New(NULL); }

  SerializedFeature* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedFeature& from);
  void MergeFrom(const SerializedFeature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedFeature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mappoint_id = 2;
  void clear_mappoint_id();
  static const int kMappointIdFieldNumber = 2;
  ::google::protobuf::uint32 mappoint_id() const;
  void set_mappoint_id(::google::protobuf::uint32 value);

  // optional .SerializedKeypoint keypoint = 3;
  bool has_keypoint() const;
  void clear_keypoint();
  static const int kKeypointFieldNumber = 3;
  const ::SerializedKeypoint& keypoint() const;
  ::SerializedKeypoint* mutable_keypoint();
  ::SerializedKeypoint* release_keypoint();
  void set_allocated_keypoint(::SerializedKeypoint* keypoint);

  // optional .SerializedDescriptor briefdescriptor = 4;
  bool has_briefdescriptor() const;
  void clear_briefdescriptor();
  static const int kBriefdescriptorFieldNumber = 4;
  const ::SerializedDescriptor& briefdescriptor() const;
  ::SerializedDescriptor* mutable_briefdescriptor();
  ::SerializedDescriptor* release_briefdescriptor();
  void set_allocated_briefdescriptor(::SerializedDescriptor* briefdescriptor);

  // @@protoc_insertion_point(class_scope:SerializedFeature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::SerializedKeypoint* keypoint_;
  ::SerializedDescriptor* briefdescriptor_;
  ::google::protobuf::uint32 mappoint_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedFeature* default_instance_;
};
// -------------------------------------------------------------------

class SerializedKeyframeFeatures : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeyframeFeatures) */ {
 public:
  SerializedKeyframeFeatures();
  virtual ~SerializedKeyframeFeatures();

  SerializedKeyframeFeatures(const SerializedKeyframeFeatures& from);

  inline SerializedKeyframeFeatures& operator=(const SerializedKeyframeFeatures& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeyframeFeatures& default_instance();

  void Swap(SerializedKeyframeFeatures* other);

  // implements Message ----------------------------------------------

  inline SerializedKeyframeFeatures* New() const { return New(NULL); }

  SerializedKeyframeFeatures* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedKeyframeFeatures& from);
  void MergeFrom(const SerializedKeyframeFeatures& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedKeyframeFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 keyframe_id = 1;
  void clear_keyframe_id();
  static const int kKeyframeIdFieldNumber = 1;
  ::google::protobuf::uint32 keyframe_id() const;
  void set_keyframe_id(::google::protobuf::uint32 value);

  // repeated .SerializedFeature feature = 2;
  int feature_size() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 2;
  const ::SerializedFeature& feature(int index) const;
  ::SerializedFeature* mutable_feature(int index);
  ::SerializedFeature* add_feature();
  ::google::protobuf::RepeatedPtrField< ::SerializedFeature >*
      mutable_feature();
  const ::google::protobuf::RepeatedPtrField< ::SerializedFeature >&
      feature() const;

  // @@protoc_insertion_point(class_scope:SerializedKeyframeFeatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::SerializedFeature > feature_;
  ::google::protobuf::uint32 keyframe_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedKeyframeFeatures* default_instance_;
};
// -------------------------------------------------------------------

class SerializedKeyframeFeaturesArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SerializedKeyframeFeaturesArray) */ {
 public:
  SerializedKeyframeFeaturesArray();
  virtual ~SerializedKeyframeFeaturesArray();

  SerializedKeyframeFeaturesArray(const SerializedKeyframeFeaturesArray& from);

  inline SerializedKeyframeFeaturesArray& operator=(const SerializedKeyframeFeaturesArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedKeyframeFeaturesArray& default_instance();

  void Swap(SerializedKeyframeFeaturesArray* other);

  // implements Message ----------------------------------------------

  inline SerializedKeyframeFeaturesArray* New() const { return New(NULL); }

  SerializedKeyframeFeaturesArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedKeyframeFeaturesArray& from);
  void MergeFrom(const SerializedKeyframeFeaturesArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedKeyframeFeaturesArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SerializedKeyframeFeatures feature = 1;
  int feature_size() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 1;
  const ::SerializedKeyframeFeatures& feature(int index) const;
  ::SerializedKeyframeFeatures* mutable_feature(int index);
  ::SerializedKeyframeFeatures* add_feature();
  ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures >*
      mutable_feature();
  const ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures >&
      feature() const;

  // @@protoc_insertion_point(class_scope:SerializedKeyframeFeaturesArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures > feature_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_osmap_2eproto();
  friend void protobuf_AssignDesc_osmap_2eproto();
  friend void protobuf_ShutdownFile_osmap_2eproto();

  void InitAsDefaultInstance();
  static SerializedKeyframeFeaturesArray* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SerializedDescriptor

// repeated fixed32 block = 1;
inline int SerializedDescriptor::block_size() const {
  return block_.size();
}
inline void SerializedDescriptor::clear_block() {
  block_.Clear();
}
inline ::google::protobuf::uint32 SerializedDescriptor::block(int index) const {
  // @@protoc_insertion_point(field_get:SerializedDescriptor.block)
  return block_.Get(index);
}
inline void SerializedDescriptor::set_block(int index, ::google::protobuf::uint32 value) {
  block_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedDescriptor.block)
}
inline void SerializedDescriptor::add_block(::google::protobuf::uint32 value) {
  block_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedDescriptor.block)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SerializedDescriptor::block() const {
  // @@protoc_insertion_point(field_list:SerializedDescriptor.block)
  return block_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SerializedDescriptor::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:SerializedDescriptor.block)
  return &block_;
}

// -------------------------------------------------------------------

// SerializedPose

// repeated float element = 1;
inline int SerializedPose::element_size() const {
  return element_.size();
}
inline void SerializedPose::clear_element() {
  element_.Clear();
}
inline float SerializedPose::element(int index) const {
  // @@protoc_insertion_point(field_get:SerializedPose.element)
  return element_.Get(index);
}
inline void SerializedPose::set_element(int index, float value) {
  element_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedPose.element)
}
inline void SerializedPose::add_element(float value) {
  element_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedPose.element)
}
inline const ::google::protobuf::RepeatedField< float >&
SerializedPose::element() const {
  // @@protoc_insertion_point(field_list:SerializedPose.element)
  return element_;
}
inline ::google::protobuf::RepeatedField< float >*
SerializedPose::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:SerializedPose.element)
  return &element_;
}

// -------------------------------------------------------------------

// SerializedPosition

// optional float x = 1;
inline void SerializedPosition::clear_x() {
  x_ = 0;
}
inline float SerializedPosition::x() const {
  // @@protoc_insertion_point(field_get:SerializedPosition.x)
  return x_;
}
inline void SerializedPosition::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:SerializedPosition.x)
}

// optional float y = 2;
inline void SerializedPosition::clear_y() {
  y_ = 0;
}
inline float SerializedPosition::y() const {
  // @@protoc_insertion_point(field_get:SerializedPosition.y)
  return y_;
}
inline void SerializedPosition::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:SerializedPosition.y)
}

// optional float z = 3;
inline void SerializedPosition::clear_z() {
  z_ = 0;
}
inline float SerializedPosition::z() const {
  // @@protoc_insertion_point(field_get:SerializedPosition.z)
  return z_;
}
inline void SerializedPosition::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:SerializedPosition.z)
}

// -------------------------------------------------------------------

// SerializedKeypoint

// optional float ptx = 1;
inline void SerializedKeypoint::clear_ptx() {
  ptx_ = 0;
}
inline float SerializedKeypoint::ptx() const {
  // @@protoc_insertion_point(field_get:SerializedKeypoint.ptx)
  return ptx_;
}
inline void SerializedKeypoint::set_ptx(float value) {
  
  ptx_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeypoint.ptx)
}

// optional float pty = 2;
inline void SerializedKeypoint::clear_pty() {
  pty_ = 0;
}
inline float SerializedKeypoint::pty() const {
  // @@protoc_insertion_point(field_get:SerializedKeypoint.pty)
  return pty_;
}
inline void SerializedKeypoint::set_pty(float value) {
  
  pty_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeypoint.pty)
}

// optional float angle = 3;
inline void SerializedKeypoint::clear_angle() {
  angle_ = 0;
}
inline float SerializedKeypoint::angle() const {
  // @@protoc_insertion_point(field_get:SerializedKeypoint.angle)
  return angle_;
}
inline void SerializedKeypoint::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeypoint.angle)
}

// optional float octave = 4;
inline void SerializedKeypoint::clear_octave() {
  octave_ = 0;
}
inline float SerializedKeypoint::octave() const {
  // @@protoc_insertion_point(field_get:SerializedKeypoint.octave)
  return octave_;
}
inline void SerializedKeypoint::set_octave(float value) {
  
  octave_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeypoint.octave)
}

// -------------------------------------------------------------------

// SerializedK

// optional float fx = 1;
inline void SerializedK::clear_fx() {
  fx_ = 0;
}
inline float SerializedK::fx() const {
  // @@protoc_insertion_point(field_get:SerializedK.fx)
  return fx_;
}
inline void SerializedK::set_fx(float value) {
  
  fx_ = value;
  // @@protoc_insertion_point(field_set:SerializedK.fx)
}

// optional float fy = 2;
inline void SerializedK::clear_fy() {
  fy_ = 0;
}
inline float SerializedK::fy() const {
  // @@protoc_insertion_point(field_get:SerializedK.fy)
  return fy_;
}
inline void SerializedK::set_fy(float value) {
  
  fy_ = value;
  // @@protoc_insertion_point(field_set:SerializedK.fy)
}

// optional float cx = 3;
inline void SerializedK::clear_cx() {
  cx_ = 0;
}
inline float SerializedK::cx() const {
  // @@protoc_insertion_point(field_get:SerializedK.cx)
  return cx_;
}
inline void SerializedK::set_cx(float value) {
  
  cx_ = value;
  // @@protoc_insertion_point(field_set:SerializedK.cx)
}

// optional float cy = 4;
inline void SerializedK::clear_cy() {
  cy_ = 0;
}
inline float SerializedK::cy() const {
  // @@protoc_insertion_point(field_get:SerializedK.cy)
  return cy_;
}
inline void SerializedK::set_cy(float value) {
  
  cy_ = value;
  // @@protoc_insertion_point(field_set:SerializedK.cy)
}

// -------------------------------------------------------------------

// SerializedKArray

// repeated .SerializedK k = 1;
inline int SerializedKArray::k_size() const {
  return k_.size();
}
inline void SerializedKArray::clear_k() {
  k_.Clear();
}
inline const ::SerializedK& SerializedKArray::k(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKArray.k)
  return k_.Get(index);
}
inline ::SerializedK* SerializedKArray::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedKArray.k)
  return k_.Mutable(index);
}
inline ::SerializedK* SerializedKArray::add_k() {
  // @@protoc_insertion_point(field_add:SerializedKArray.k)
  return k_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedK >*
SerializedKArray::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKArray.k)
  return &k_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedK >&
SerializedKArray::k() const {
  // @@protoc_insertion_point(field_list:SerializedKArray.k)
  return k_;
}

// -------------------------------------------------------------------

// SerializedMappoint

// optional uint32 id = 1;
inline void SerializedMappoint::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedMappoint::id() const {
  // @@protoc_insertion_point(field_get:SerializedMappoint.id)
  return id_;
}
inline void SerializedMappoint::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:SerializedMappoint.id)
}

// optional .SerializedPosition position = 2;
inline bool SerializedMappoint::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
inline void SerializedMappoint::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::SerializedPosition& SerializedMappoint::position() const {
  // @@protoc_insertion_point(field_get:SerializedMappoint.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::SerializedPosition* SerializedMappoint::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::SerializedPosition;
  }
  // @@protoc_insertion_point(field_mutable:SerializedMappoint.position)
  return position_;
}
inline ::SerializedPosition* SerializedMappoint::release_position() {
  // @@protoc_insertion_point(field_release:SerializedMappoint.position)
  
  ::SerializedPosition* temp = position_;
  position_ = NULL;
  return temp;
}
inline void SerializedMappoint::set_allocated_position(::SerializedPosition* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SerializedMappoint.position)
}

// optional float visible = 3;
inline void SerializedMappoint::clear_visible() {
  visible_ = 0;
}
inline float SerializedMappoint::visible() const {
  // @@protoc_insertion_point(field_get:SerializedMappoint.visible)
  return visible_;
}
inline void SerializedMappoint::set_visible(float value) {
  
  visible_ = value;
  // @@protoc_insertion_point(field_set:SerializedMappoint.visible)
}

// optional float found = 4;
inline void SerializedMappoint::clear_found() {
  found_ = 0;
}
inline float SerializedMappoint::found() const {
  // @@protoc_insertion_point(field_get:SerializedMappoint.found)
  return found_;
}
inline void SerializedMappoint::set_found(float value) {
  
  found_ = value;
  // @@protoc_insertion_point(field_set:SerializedMappoint.found)
}

// optional .SerializedDescriptor briefdescriptor = 5;
inline bool SerializedMappoint::has_briefdescriptor() const {
  return !_is_default_instance_ && briefdescriptor_ != NULL;
}
inline void SerializedMappoint::clear_briefdescriptor() {
  if (GetArenaNoVirtual() == NULL && briefdescriptor_ != NULL) delete briefdescriptor_;
  briefdescriptor_ = NULL;
}
inline const ::SerializedDescriptor& SerializedMappoint::briefdescriptor() const {
  // @@protoc_insertion_point(field_get:SerializedMappoint.briefdescriptor)
  return briefdescriptor_ != NULL ? *briefdescriptor_ : *default_instance_->briefdescriptor_;
}
inline ::SerializedDescriptor* SerializedMappoint::mutable_briefdescriptor() {
  
  if (briefdescriptor_ == NULL) {
    briefdescriptor_ = new ::SerializedDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:SerializedMappoint.briefdescriptor)
  return briefdescriptor_;
}
inline ::SerializedDescriptor* SerializedMappoint::release_briefdescriptor() {
  // @@protoc_insertion_point(field_release:SerializedMappoint.briefdescriptor)
  
  ::SerializedDescriptor* temp = briefdescriptor_;
  briefdescriptor_ = NULL;
  return temp;
}
inline void SerializedMappoint::set_allocated_briefdescriptor(::SerializedDescriptor* briefdescriptor) {
  delete briefdescriptor_;
  briefdescriptor_ = briefdescriptor;
  if (briefdescriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SerializedMappoint.briefdescriptor)
}

// -------------------------------------------------------------------

// SerializedMappointArray

// repeated .SerializedMappoint mappoint = 1;
inline int SerializedMappointArray::mappoint_size() const {
  return mappoint_.size();
}
inline void SerializedMappointArray::clear_mappoint() {
  mappoint_.Clear();
}
inline const ::SerializedMappoint& SerializedMappointArray::mappoint(int index) const {
  // @@protoc_insertion_point(field_get:SerializedMappointArray.mappoint)
  return mappoint_.Get(index);
}
inline ::SerializedMappoint* SerializedMappointArray::mutable_mappoint(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedMappointArray.mappoint)
  return mappoint_.Mutable(index);
}
inline ::SerializedMappoint* SerializedMappointArray::add_mappoint() {
  // @@protoc_insertion_point(field_add:SerializedMappointArray.mappoint)
  return mappoint_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedMappoint >*
SerializedMappointArray::mutable_mappoint() {
  // @@protoc_insertion_point(field_mutable_list:SerializedMappointArray.mappoint)
  return &mappoint_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedMappoint >&
SerializedMappointArray::mappoint() const {
  // @@protoc_insertion_point(field_list:SerializedMappointArray.mappoint)
  return mappoint_;
}

// -------------------------------------------------------------------

// SerializedKeyframe

// optional uint32 id = 1;
inline void SerializedKeyframe::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedKeyframe::id() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.id)
  return id_;
}
inline void SerializedKeyframe::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeyframe.id)
}

// optional .SerializedPose pose = 2;
inline bool SerializedKeyframe::has_pose() const {
  return !_is_default_instance_ && pose_ != NULL;
}
inline void SerializedKeyframe::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) delete pose_;
  pose_ = NULL;
}
inline const ::SerializedPose& SerializedKeyframe::pose() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.pose)
  return pose_ != NULL ? *pose_ : *default_instance_->pose_;
}
inline ::SerializedPose* SerializedKeyframe::mutable_pose() {
  
  if (pose_ == NULL) {
    pose_ = new ::SerializedPose;
  }
  // @@protoc_insertion_point(field_mutable:SerializedKeyframe.pose)
  return pose_;
}
inline ::SerializedPose* SerializedKeyframe::release_pose() {
  // @@protoc_insertion_point(field_release:SerializedKeyframe.pose)
  
  ::SerializedPose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline void SerializedKeyframe::set_allocated_pose(::SerializedPose* pose) {
  delete pose_;
  pose_ = pose;
  if (pose) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SerializedKeyframe.pose)
}

// optional .SerializedK kmatrix = 3;
inline bool SerializedKeyframe::has_kmatrix() const {
  return !_is_default_instance_ && kmatrix_ != NULL;
}
inline void SerializedKeyframe::clear_kmatrix() {
  if (GetArenaNoVirtual() == NULL && kmatrix_ != NULL) delete kmatrix_;
  kmatrix_ = NULL;
}
inline const ::SerializedK& SerializedKeyframe::kmatrix() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.kmatrix)
  return kmatrix_ != NULL ? *kmatrix_ : *default_instance_->kmatrix_;
}
inline ::SerializedK* SerializedKeyframe::mutable_kmatrix() {
  
  if (kmatrix_ == NULL) {
    kmatrix_ = new ::SerializedK;
  }
  // @@protoc_insertion_point(field_mutable:SerializedKeyframe.kmatrix)
  return kmatrix_;
}
inline ::SerializedK* SerializedKeyframe::release_kmatrix() {
  // @@protoc_insertion_point(field_release:SerializedKeyframe.kmatrix)
  
  ::SerializedK* temp = kmatrix_;
  kmatrix_ = NULL;
  return temp;
}
inline void SerializedKeyframe::set_allocated_kmatrix(::SerializedK* kmatrix) {
  delete kmatrix_;
  kmatrix_ = kmatrix;
  if (kmatrix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SerializedKeyframe.kmatrix)
}

// optional uint32 kindex = 4;
inline void SerializedKeyframe::clear_kindex() {
  kindex_ = 0u;
}
inline ::google::protobuf::uint32 SerializedKeyframe::kindex() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.kindex)
  return kindex_;
}
inline void SerializedKeyframe::set_kindex(::google::protobuf::uint32 value) {
  
  kindex_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeyframe.kindex)
}

// repeated uint32 loopedgesids = 5;
inline int SerializedKeyframe::loopedgesids_size() const {
  return loopedgesids_.size();
}
inline void SerializedKeyframe::clear_loopedgesids() {
  loopedgesids_.Clear();
}
inline ::google::protobuf::uint32 SerializedKeyframe::loopedgesids(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.loopedgesids)
  return loopedgesids_.Get(index);
}
inline void SerializedKeyframe::set_loopedgesids(int index, ::google::protobuf::uint32 value) {
  loopedgesids_.Set(index, value);
  // @@protoc_insertion_point(field_set:SerializedKeyframe.loopedgesids)
}
inline void SerializedKeyframe::add_loopedgesids(::google::protobuf::uint32 value) {
  loopedgesids_.Add(value);
  // @@protoc_insertion_point(field_add:SerializedKeyframe.loopedgesids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SerializedKeyframe::loopedgesids() const {
  // @@protoc_insertion_point(field_list:SerializedKeyframe.loopedgesids)
  return loopedgesids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SerializedKeyframe::mutable_loopedgesids() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKeyframe.loopedgesids)
  return &loopedgesids_;
}

// optional double timestamp = 6;
inline void SerializedKeyframe::clear_timestamp() {
  timestamp_ = 0;
}
inline double SerializedKeyframe::timestamp() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframe.timestamp)
  return timestamp_;
}
inline void SerializedKeyframe::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeyframe.timestamp)
}

// -------------------------------------------------------------------

// SerializedKeyframeArray

// repeated .SerializedKeyframe keyframe = 1;
inline int SerializedKeyframeArray::keyframe_size() const {
  return keyframe_.size();
}
inline void SerializedKeyframeArray::clear_keyframe() {
  keyframe_.Clear();
}
inline const ::SerializedKeyframe& SerializedKeyframeArray::keyframe(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKeyframeArray.keyframe)
  return keyframe_.Get(index);
}
inline ::SerializedKeyframe* SerializedKeyframeArray::mutable_keyframe(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedKeyframeArray.keyframe)
  return keyframe_.Mutable(index);
}
inline ::SerializedKeyframe* SerializedKeyframeArray::add_keyframe() {
  // @@protoc_insertion_point(field_add:SerializedKeyframeArray.keyframe)
  return keyframe_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe >*
SerializedKeyframeArray::mutable_keyframe() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKeyframeArray.keyframe)
  return &keyframe_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedKeyframe >&
SerializedKeyframeArray::keyframe() const {
  // @@protoc_insertion_point(field_list:SerializedKeyframeArray.keyframe)
  return keyframe_;
}

// -------------------------------------------------------------------

// SerializedFeature

// optional uint32 mappoint_id = 2;
inline void SerializedFeature::clear_mappoint_id() {
  mappoint_id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedFeature::mappoint_id() const {
  // @@protoc_insertion_point(field_get:SerializedFeature.mappoint_id)
  return mappoint_id_;
}
inline void SerializedFeature::set_mappoint_id(::google::protobuf::uint32 value) {
  
  mappoint_id_ = value;
  // @@protoc_insertion_point(field_set:SerializedFeature.mappoint_id)
}

// optional .SerializedKeypoint keypoint = 3;
inline bool SerializedFeature::has_keypoint() const {
  return !_is_default_instance_ && keypoint_ != NULL;
}
inline void SerializedFeature::clear_keypoint() {
  if (GetArenaNoVirtual() == NULL && keypoint_ != NULL) delete keypoint_;
  keypoint_ = NULL;
}
inline const ::SerializedKeypoint& SerializedFeature::keypoint() const {
  // @@protoc_insertion_point(field_get:SerializedFeature.keypoint)
  return keypoint_ != NULL ? *keypoint_ : *default_instance_->keypoint_;
}
inline ::SerializedKeypoint* SerializedFeature::mutable_keypoint() {
  
  if (keypoint_ == NULL) {
    keypoint_ = new ::SerializedKeypoint;
  }
  // @@protoc_insertion_point(field_mutable:SerializedFeature.keypoint)
  return keypoint_;
}
inline ::SerializedKeypoint* SerializedFeature::release_keypoint() {
  // @@protoc_insertion_point(field_release:SerializedFeature.keypoint)
  
  ::SerializedKeypoint* temp = keypoint_;
  keypoint_ = NULL;
  return temp;
}
inline void SerializedFeature::set_allocated_keypoint(::SerializedKeypoint* keypoint) {
  delete keypoint_;
  keypoint_ = keypoint;
  if (keypoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SerializedFeature.keypoint)
}

// optional .SerializedDescriptor briefdescriptor = 4;
inline bool SerializedFeature::has_briefdescriptor() const {
  return !_is_default_instance_ && briefdescriptor_ != NULL;
}
inline void SerializedFeature::clear_briefdescriptor() {
  if (GetArenaNoVirtual() == NULL && briefdescriptor_ != NULL) delete briefdescriptor_;
  briefdescriptor_ = NULL;
}
inline const ::SerializedDescriptor& SerializedFeature::briefdescriptor() const {
  // @@protoc_insertion_point(field_get:SerializedFeature.briefdescriptor)
  return briefdescriptor_ != NULL ? *briefdescriptor_ : *default_instance_->briefdescriptor_;
}
inline ::SerializedDescriptor* SerializedFeature::mutable_briefdescriptor() {
  
  if (briefdescriptor_ == NULL) {
    briefdescriptor_ = new ::SerializedDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:SerializedFeature.briefdescriptor)
  return briefdescriptor_;
}
inline ::SerializedDescriptor* SerializedFeature::release_briefdescriptor() {
  // @@protoc_insertion_point(field_release:SerializedFeature.briefdescriptor)
  
  ::SerializedDescriptor* temp = briefdescriptor_;
  briefdescriptor_ = NULL;
  return temp;
}
inline void SerializedFeature::set_allocated_briefdescriptor(::SerializedDescriptor* briefdescriptor) {
  delete briefdescriptor_;
  briefdescriptor_ = briefdescriptor;
  if (briefdescriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SerializedFeature.briefdescriptor)
}

// -------------------------------------------------------------------

// SerializedKeyframeFeatures

// optional uint32 keyframe_id = 1;
inline void SerializedKeyframeFeatures::clear_keyframe_id() {
  keyframe_id_ = 0u;
}
inline ::google::protobuf::uint32 SerializedKeyframeFeatures::keyframe_id() const {
  // @@protoc_insertion_point(field_get:SerializedKeyframeFeatures.keyframe_id)
  return keyframe_id_;
}
inline void SerializedKeyframeFeatures::set_keyframe_id(::google::protobuf::uint32 value) {
  
  keyframe_id_ = value;
  // @@protoc_insertion_point(field_set:SerializedKeyframeFeatures.keyframe_id)
}

// repeated .SerializedFeature feature = 2;
inline int SerializedKeyframeFeatures::feature_size() const {
  return feature_.size();
}
inline void SerializedKeyframeFeatures::clear_feature() {
  feature_.Clear();
}
inline const ::SerializedFeature& SerializedKeyframeFeatures::feature(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKeyframeFeatures.feature)
  return feature_.Get(index);
}
inline ::SerializedFeature* SerializedKeyframeFeatures::mutable_feature(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedKeyframeFeatures.feature)
  return feature_.Mutable(index);
}
inline ::SerializedFeature* SerializedKeyframeFeatures::add_feature() {
  // @@protoc_insertion_point(field_add:SerializedKeyframeFeatures.feature)
  return feature_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedFeature >*
SerializedKeyframeFeatures::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKeyframeFeatures.feature)
  return &feature_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedFeature >&
SerializedKeyframeFeatures::feature() const {
  // @@protoc_insertion_point(field_list:SerializedKeyframeFeatures.feature)
  return feature_;
}

// -------------------------------------------------------------------

// SerializedKeyframeFeaturesArray

// repeated .SerializedKeyframeFeatures feature = 1;
inline int SerializedKeyframeFeaturesArray::feature_size() const {
  return feature_.size();
}
inline void SerializedKeyframeFeaturesArray::clear_feature() {
  feature_.Clear();
}
inline const ::SerializedKeyframeFeatures& SerializedKeyframeFeaturesArray::feature(int index) const {
  // @@protoc_insertion_point(field_get:SerializedKeyframeFeaturesArray.feature)
  return feature_.Get(index);
}
inline ::SerializedKeyframeFeatures* SerializedKeyframeFeaturesArray::mutable_feature(int index) {
  // @@protoc_insertion_point(field_mutable:SerializedKeyframeFeaturesArray.feature)
  return feature_.Mutable(index);
}
inline ::SerializedKeyframeFeatures* SerializedKeyframeFeaturesArray::add_feature() {
  // @@protoc_insertion_point(field_add:SerializedKeyframeFeaturesArray.feature)
  return feature_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures >*
SerializedKeyframeFeaturesArray::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:SerializedKeyframeFeaturesArray.feature)
  return &feature_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SerializedKeyframeFeatures >&
SerializedKeyframeFeaturesArray::feature() const {
  // @@protoc_insertion_point(field_list:SerializedKeyframeFeaturesArray.feature)
  return feature_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osmap_2eproto__INCLUDED
